C51 COMPILER V9.60.0.0   RF392_EFMV02_MAIN                                                 04/21/2021 08:25:57 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE RF392_EFMV02_MAIN
OBJECT MODULE PLACED IN .\src\rf392_EFMV02_main.OBJ
COMPILER INVOKED BY: d:\SiliconLabs\SimplicityStudio\v5\developer\toolchains\keil_8051\9.60\BIN\C51.exe E:\jim\project\A
                    -2021\RF392\_projectcode\RF392B003\RF392B\rf392_v06\src\rf392_EFMV02_main.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARN
                    -INGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(8,SPEED) DEFINE(DEBUG=1,SILABS_STARTUP=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(E:\jim\
                    -project\A2021\RF392\_projectcode\RF392B003\RF392B\rf392_v06\inc;E:\jim\project\A2021\RF392\_projectcode\RF392B003\RF392B
                    -\rf392_v06\inc\config;E:\jim\project\A2021\RF392\_projectcode\RF392B003\RF392B\rf392_v06\app_code;D:/SiliconLabs/Simplic
                    -ityStudio/v5/developer/sdks/8051/v4.2.0//Lib/efm8_capsense;D:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.0
                    -//Device/EFM8SB1/efm8_capsense/device_layer;D:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.0//Device/shared
                    -/si8051Base;D:/SiliconLabs/SimplicityStudio/v5/developer/sdks/8051/v4.2.0//Device/EFM8SB1/inc) PRINT(.\src\rf392_EFMV02_
                    -main.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src\rf392_EFMV02_main.OBJ)

line level    source

   1          //=========================================================
   2          // src/rf392_EFMV02_main.c: generated by Hardware Configurator
   3          //
   4          // This file will be updated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!!
   7          //=========================================================
   8          
   9          //-----------------------------------------------------------------------------
  10          // Includes
  11          //-----------------------------------------------------------------------------
  12          #include <SI_EFM8SB1_Register_Enums.h>                  // SFR declarations
  13          #include "InitDevice.h"
  14          //
  15          // $[Generated Includes]
  16          #include "cslib_config.h"
  17          #include "cslib.h"
  18          // [Generated Includes]$
  19          
  20          #include "USER_PROGRAM.h"
  21          #include "hgsemi74hc.h"
  22          #include "board_efm8sb.h"
  23          
  24          bit clib_keypressflag = 0;
  25          extern unsigned char xdata STANDBY_TIME;
  26          extern unsigned int xdata app_sleep_counter;
  27          
  28          unsigned int xdata dlt_counter = 0;
  29          unsigned int xdata dlt_counter1 = 0;
  30          int xdata dlt_counter2 = 0;
  31          //-----------------------------------------------------------------------------
  32          // SiLabs_Startup() Routine
  33          // ----------------------------------------------------------------------------
  34          // This function is called immediately after reset, before the initialization
  35          // code is run in SILABS_STARTUP.A51 (which runs before main() ). This is a
  36          // useful place to disable the watchdog timer, which is enable by default
  37          // and may trigger before main() in some instances.
  38          //-----------------------------------------------------------------------------
  39          void
  40          SiLabs_Startup (void)
  41          {
  42   1      // $[SiLabs Startup]
  43   1        /*
  44   1         // WDTE (Watchdog Timer Enable) = DISABLED (Disable Watchdog Timer.)
  45   1         */
  46   1        PCA0MD &= ~PCA0MD_WDTE__BMASK;
  47   1      
  48   1      // [SiLabs Startup]$
C51 COMPILER V9.60.0.0   RF392_EFMV02_MAIN                                                 04/21/2021 08:25:57 PAGE 2   

  49   1      }
  50          
  51          //-----------------------------------------------------------------------------
  52          // main() Routine
  53          // ----------------------------------------------------------------------------
  54          int
  55          main (void)
  56          {
  57   1        // Call hardware initialization routine
  58   1        enter_DefaultMode_from_RESET ();
  59   1        P2MDOUT |= 0x80;
  60   1        P2_B7 = 1;
  61   1        TMR2CN0_TR2 = 1;
  62   1        USER_PROGRAM_INITIAL ();
  63   1        TMR2CN0_TR2 = 0;
  64   1        //LEDALL_OFF();
  65   1        while (1)
  66   1          {
  67   2      
  68   2      // $[Generated Run-time code]
  69   2            // -----------------------------------------------------------------------------
  70   2            // If low power features are enabled, this will either put the device into a low
  71   2            // power state until it is time to take another scan, or put the device into a
  72   2            // low-power sleep mode if no touches are active
  73   2            // -----------------------------------------------------------------------------
  74   2            CSLIB_lowPowerUpdate ();
  75   2      
  76   2            // -----------------------------------------------------------------------------
  77   2            // Performs all scanning and data structure updates
  78   2            // -----------------------------------------------------------------------------
  79   2            CSLIB_update ();
  80   2      
  81   2      // [Generated Run-time code]$
  82   2            //INDICADE_PIN = !INDICADE_PIN;
  83   2            user_timer_process ();
  84   2            TMR2CN0_TR2 = 1;
  85   2            if (CSLIB_anySensorDebounceActive ())
  86   2              {
  87   3                clib_keypressflag = 1;
  88   3                app_sleep_counter = 0;
  89   3                //INDICADE_PIN = 0;
  90   3              }
  91   2            else
  92   2              {
  93   3                //INDICADE_PIN = 1;//key press timer define
  94   3                clib_keypressflag = 0;
  95   3                app_sleep_counter++;
  96   3              }
  97   2      
  98   2            USER_PROGRAM ();
  99   2            TMR2CN0_TR2 = 0;
 100   2            TMR2CN0_TF2H = 0;
 101   2            //TMR2H = 0xBC;//--16
 102   2            //TMR2L = 0x6A;
 103   2            TMR2H = 0xD8;//--8
 104   2            TMR2L = 0x20;
 105   2            //dlt_counter = (TMR2H << 8) + TMR2L;
 106   2      
 107   2            //LED7TURNON();
 108   2          }
 109   1      }


C51 COMPILER V9.60.0.0   RF392_EFMV02_MAIN                                                 04/21/2021 08:25:57 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     78    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      6    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
